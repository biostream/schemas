// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bmeg/pathway.proto

package bmeg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ProteinInteraction struct {
	Src         string `protobuf:"bytes,1,opt,name=src" json:"src,omitempty"`
	Dst         string `protobuf:"bytes,2,opt,name=dst" json:"dst,omitempty"`
	Interaction string `protobuf:"bytes,3,opt,name=interaction" json:"interaction,omitempty"`
}

func (m *ProteinInteraction) Reset()                    { *m = ProteinInteraction{} }
func (m *ProteinInteraction) String() string            { return proto.CompactTextString(m) }
func (*ProteinInteraction) ProtoMessage()               {}
func (*ProteinInteraction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *ProteinInteraction) GetSrc() string {
	if m != nil {
		return m.Src
	}
	return ""
}

func (m *ProteinInteraction) GetDst() string {
	if m != nil {
		return m.Dst
	}
	return ""
}

func (m *ProteinInteraction) GetInteraction() string {
	if m != nil {
		return m.Interaction
	}
	return ""
}

type Pathway struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *Pathway) Reset()                    { *m = Pathway{} }
func (m *Pathway) String() string            { return proto.CompactTextString(m) }
func (*Pathway) ProtoMessage()               {}
func (*Pathway) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *Pathway) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ProteinInstance struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Protein string `protobuf:"bytes,2,opt,name=protein" json:"protein,omitempty"`
}

func (m *ProteinInstance) Reset()                    { *m = ProteinInstance{} }
func (m *ProteinInstance) String() string            { return proto.CompactTextString(m) }
func (*ProteinInstance) ProtoMessage()               {}
func (*ProteinInstance) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *ProteinInstance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProteinInstance) GetProtein() string {
	if m != nil {
		return m.Protein
	}
	return ""
}

type Complex struct {
	Id         string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Components []string `protobuf:"bytes,2,rep,name=components" json:"components,omitempty"`
}

func (m *Complex) Reset()                    { *m = Complex{} }
func (m *Complex) String() string            { return proto.CompactTextString(m) }
func (*Complex) ProtoMessage()               {}
func (*Complex) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *Complex) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Complex) GetComponents() []string {
	if m != nil {
		return m.Components
	}
	return nil
}

type Reaction struct {
	Id          string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Interaction string   `protobuf:"bytes,2,opt,name=interaction" json:"interaction,omitempty"`
	To          []string `protobuf:"bytes,3,rep,name=to" json:"to,omitempty"`
	From        []string `protobuf:"bytes,4,rep,name=from" json:"from,omitempty"`
}

func (m *Reaction) Reset()                    { *m = Reaction{} }
func (m *Reaction) String() string            { return proto.CompactTextString(m) }
func (*Reaction) ProtoMessage()               {}
func (*Reaction) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *Reaction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Reaction) GetInteraction() string {
	if m != nil {
		return m.Interaction
	}
	return ""
}

func (m *Reaction) GetTo() []string {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Reaction) GetFrom() []string {
	if m != nil {
		return m.From
	}
	return nil
}

type Catalysis struct {
}

func (m *Catalysis) Reset()                    { *m = Catalysis{} }
func (m *Catalysis) String() string            { return proto.CompactTextString(m) }
func (*Catalysis) ProtoMessage()               {}
func (*Catalysis) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func init() {
	proto.RegisterType((*ProteinInteraction)(nil), "bmeg.ProteinInteraction")
	proto.RegisterType((*Pathway)(nil), "bmeg.Pathway")
	proto.RegisterType((*ProteinInstance)(nil), "bmeg.ProteinInstance")
	proto.RegisterType((*Complex)(nil), "bmeg.Complex")
	proto.RegisterType((*Reaction)(nil), "bmeg.Reaction")
	proto.RegisterType((*Catalysis)(nil), "bmeg.Catalysis")
}

func init() { proto.RegisterFile("bmeg/pathway.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x55, 0x27, 0x22, 0xe4, 0x2a, 0x01, 0xba, 0xc9, 0x2c, 0x28, 0xf2, 0xd4, 0x09, 0x06,
	0x26, 0xc4, 0xd8, 0x89, 0xad, 0xca, 0xc8, 0x84, 0x9b, 0x18, 0xb0, 0x54, 0xfb, 0x2c, 0xfb, 0x24,
	0xe8, 0xbf, 0x47, 0x76, 0x02, 0x54, 0xe9, 0x76, 0xfe, 0x7c, 0xef, 0x3d, 0xbd, 0x03, 0xdc, 0x3b,
	0xf3, 0xf1, 0x10, 0x34, 0x7f, 0x7e, 0xe9, 0xe3, 0x7d, 0x88, 0xc4, 0x84, 0x75, 0x66, 0xea, 0x15,
	0x70, 0x17, 0x89, 0x8d, 0xf5, 0x2f, 0x9e, 0x4d, 0xd4, 0x03, 0x5b, 0xf2, 0x78, 0x03, 0x55, 0x8a,
	0x83, 0x5c, 0x75, 0xab, 0x4d, 0xdb, 0xe7, 0x31, 0x93, 0x31, 0xb1, 0x14, 0x13, 0x19, 0x13, 0x63,
	0x07, 0x6b, 0xfb, 0x2f, 0x91, 0x55, 0xf9, 0x39, 0x45, 0xea, 0x16, 0x9a, 0xdd, 0x14, 0x89, 0x57,
	0x20, 0xec, 0x38, 0xfb, 0x09, 0x3b, 0xaa, 0x67, 0xb8, 0xfe, 0x8b, 0x4d, 0xac, 0xfd, 0x60, 0x96,
	0x2b, 0x28, 0xa1, 0x09, 0xd3, 0xca, 0x9c, 0xfa, 0xfb, 0x54, 0x4f, 0xd0, 0x6c, 0xc9, 0x85, 0x83,
	0xf9, 0x3e, 0x13, 0xdd, 0x01, 0x0c, 0xe4, 0x02, 0x79, 0xe3, 0x39, 0x49, 0xd1, 0x55, 0x9b, 0xb6,
	0x3f, 0x21, 0xea, 0x0d, 0x2e, 0x7b, 0x33, 0x97, 0x5c, 0x6a, 0x17, 0x85, 0xc4, 0x59, 0xa1, 0xac,
	0x60, 0x92, 0x55, 0x71, 0x15, 0x4c, 0x88, 0x50, 0xbf, 0x47, 0x72, 0xb2, 0x2e, 0xa4, 0xcc, 0x6a,
	0x0d, 0xed, 0x56, 0xb3, 0x3e, 0x1c, 0x93, 0x4d, 0xfb, 0x8b, 0x72, 0xea, 0xc7, 0x9f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xe8, 0xe8, 0x46, 0xbb, 0x80, 0x01, 0x00, 0x00,
}
