// Code generated by protoc-gen-go.
// source: bmeg/cna.proto
// DO NOT EDIT!

package bmeg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CNACallSet struct {
	// The call set ID.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The BioSample the call set data was generated from.
	BiosampleId string `protobuf:"bytes,2,opt,name=biosample_id,json=biosampleId" json:"biosample_id,omitempty"`
	Source      string `protobuf:"bytes,3,opt,name=source" json:"source,omitempty"`
}

func (m *CNACallSet) Reset()                    { *m = CNACallSet{} }
func (m *CNACallSet) String() string            { return proto.CompactTextString(m) }
func (*CNACallSet) ProtoMessage()               {}
func (*CNACallSet) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type CNASegment struct {
	ReferenceName string   `protobuf:"bytes,1,opt,name=reference_name,json=referenceName" json:"reference_name,omitempty"`
	Start         int64    `protobuf:"varint,2,opt,name=start" json:"start,omitempty"`
	End           int64    `protobuf:"varint,3,opt,name=end" json:"end,omitempty"`
	Value         float32  `protobuf:"fixed32,4,opt,name=value" json:"value,omitempty"`
	Genes         []string `protobuf:"bytes,5,rep,name=genes" json:"genes,omitempty"`
	CallSetId     string   `protobuf:"bytes,6,opt,name=call_set_id,json=callSetId" json:"call_set_id,omitempty"`
	Source        string   `protobuf:"bytes,7,opt,name=source" json:"source,omitempty"`
}

func (m *CNASegment) Reset()                    { *m = CNASegment{} }
func (m *CNASegment) String() string            { return proto.CompactTextString(m) }
func (*CNASegment) ProtoMessage()               {}
func (*CNASegment) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func init() {
	proto.RegisterType((*CNACallSet)(nil), "bmeg.CNACallSet")
	proto.RegisterType((*CNASegment)(nil), "bmeg.CNASegment")
}

func init() { proto.RegisterFile("bmeg/cna.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x49, 0xa6, 0x8d, 0xf4, 0x56, 0x83, 0x5c, 0x44, 0xb2, 0x92, 0x5a, 0x10, 0x5c, 0xe9,
	0xc2, 0x27, 0x90, 0xae, 0xdc, 0x74, 0x91, 0x2e, 0x5c, 0x86, 0xc9, 0xe4, 0x18, 0x0a, 0xc9, 0xa4,
	0xcc, 0x4c, 0x7d, 0x3d, 0x5f, 0xcd, 0xf9, 0x29, 0x41, 0x77, 0xf7, 0x7c, 0x77, 0xb8, 0x87, 0x6f,
	0xa8, 0x6c, 0x47, 0xf4, 0xaf, 0x4a, 0xcb, 0x97, 0x93, 0x99, 0xdc, 0xc4, 0x8b, 0x90, 0xb7, 0x9f,
	0x44, 0xbb, 0xfd, 0xfb, 0x4e, 0x0e, 0xc3, 0x01, 0x8e, 0x4b, 0xca, 0x8f, 0x5d, 0x95, 0x6d, 0xb2,
	0xe7, 0x55, 0xed, 0x27, 0x7e, 0xa4, 0xeb, 0xf6, 0x38, 0x59, 0x39, 0x9e, 0x06, 0x34, 0x7e, 0x93,
	0xc7, 0xcd, 0x7a, 0x66, 0x1f, 0x1d, 0xdf, 0x53, 0x61, 0xa7, 0xb3, 0x51, 0xa8, 0x44, 0x5c, 0x5e,
	0xd2, 0xf6, 0x27, 0x8b, 0x97, 0x0f, 0xe8, 0x47, 0x68, 0xc7, 0x4f, 0x54, 0x1a, 0x7c, 0xc1, 0x40,
	0x2b, 0x34, 0x5a, 0x8e, 0xb8, 0xb4, 0xdc, 0xcc, 0x74, 0xef, 0x21, 0xdf, 0xd1, 0xd2, 0x3a, 0x69,
	0x5c, 0x6c, 0x12, 0x75, 0x0a, 0x7c, 0x4b, 0x02, 0xba, 0x8b, 0x05, 0xa2, 0x0e, 0x63, 0x78, 0xf7,
	0x2d, 0x87, 0x33, 0xaa, 0x85, 0x67, 0x79, 0x9d, 0x42, 0xa0, 0x3d, 0x34, 0x6c, 0xb5, 0xdc, 0x08,
	0x7f, 0x3b, 0x05, 0x7e, 0xa0, 0xb5, 0xf2, 0x7e, 0x8d, 0x85, 0x0b, 0x0e, 0x45, 0xec, 0x5d, 0xa9,
	0xa4, 0xfc, 0xcf, 0xe0, 0xea, 0xaf, 0x41, 0x5b, 0xc4, 0x7f, 0x7a, 0xfb, 0x0d, 0x00, 0x00, 0xff,
	0xff, 0x53, 0x54, 0x7b, 0x22, 0x39, 0x01, 0x00, 0x00,
}
